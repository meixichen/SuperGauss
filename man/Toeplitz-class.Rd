% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Toeplitz.R
\docType{class}
\name{Toeplitz-class}
\alias{Toeplitz-class}
\alias{.Toeplitz}
\alias{Toeplitz}
\alias{set_acf}
\alias{get_acf}
\alias{trace_grad}
\alias{trace_hess}
\alias{show.Toeplitz}
\alias{\%*\%}
\alias{determinant}
\alias{solve}
\alias{\%*\%,ANY,Toeplitz-method}
\alias{\%*\%,Toeplitz,ANY-method}
\alias{determinant,Toeplitz-method}
\alias{dim,Toeplitz-method}
\alias{ncol,Toeplitz-method}
\alias{nrow,Toeplitz-method}
\alias{show,Toeplitz-method}
\alias{solve,Toeplitz-method}
\title{Constructor and methods for Toeplitz matrix objects.}
\usage{
Toeplitz(n, acf)

Toeplitz$set_acf(acf)

Toeplitz$get_acf()

Toeplitz$trace_grad(acf2)

Toeplitz$trace_hess(acf2, acf3)
}
\arguments{
\item{n}{Size of the Toeplitz matrix.}

\item{acf}{Autocorrelation vector of Toeplitz matrix.}

\item{acf2}{Autocorrelation of second Toeplitz matrix.}

\item{acf3}{Autocorrelation of third Toeplitz matrix.}
}
\value{
A \code{Toeplitz} object.
}
\description{
The \code{Toeplitz} class contains efficient methods for linear algebra with symmetric positive definite (i.e., variance) Toeplitz matrices.
}
\details{
It is assumed that the autocorrelation of the \code{Toeplitz} object defines a valid (i.e., positive definite) variance matrix.  The multiplication algorithms still work when this is not the case but the other algorithms do not (return values typically contain \code{NaN}s).
}

\section{Methods}{

If \code{Tz} is a \code{Toeplitz} object with first row/column given by \code{acf}, then:
\describe{
\item{\code{Tz$set_acf(acf)}}{Sets the autocorrelation of the matrix.}
\item{\code{Tz$get_acf()}}{Gets the autocorrelation of the matrix.}
\item{\code{nrow(Tz)}, \code{ncol(Tz)}, \code{dim(Tz)}}{Selected dimension(s) of the matrix.}
\item{\code{Tz \%*\% X}, \code{X \%*\% Tz}}{Toeplitz-Matrix and Matrix-Toeplitz multiplication.  Also works if \code{X} is a vector.}
\item{\code{solve(Tz, X)}, \code{solve(Tz)}}{Solves Toeplitz systems of equations.  When second argument is missing, returns the inverse of the Toeplitz matrix.}
\item{\code{determinant(Tz)}}{Log-determinant of the Toeplitz matrix, i.e., same thing as \code{log(det(toeplitz(acf)))}.}
\item{\code{Tz$trace_grad(acf2)}}{Computes the trace of \code{solve(Tz, toeplitz(acf2))}.  This is used in the computation of the gradient of \code{log(det(Tz(theta)))} with respect to \code{theta}.}
\item{\code{Toep$trace_hess(acf2, acf3)}}{Computes the trace of\preformatted{solve(Tz, toeplitz(acf2)) \%*\% solve(Tz, toeplitz(acf3)).
}

This is used in the computation of the Hessian of \code{log(det(Tz(theta)))} with respect to \code{theta}.}
}

\subsection{\code{Tz$set_acf(acf)}}{

Sets the autocorrelation of the matrix.

}

\subsection{\code{Tz$trace_hess(acf2, acf3)}}{

Computes the trace of\preformatted{solve(Tz, toeplitz(acf2)) \%*\% solve(Tz, toeplitz(acf3)).
}

This is used in the computation of the Hessian of \code{log(det(Tz(theta)))} with respect to \code{theta}.
}
}

\examples{
# construction
acf <- exp(-(1:5))
Toep <- Toeplitz(acf = acf)
# alternatively, can allocate space first
Toep <- Toeplitz(n = length(acf))
Toep$set_acf(acf = acf)

dim(Toep) # == c(nrow(Toep), ncol(Toep))
Toep # show method
Toep$get_acf() # extract the acf

# linear algebra
X <- matrix(rnorm(10), 5, 2)
Toep \%*\% X
t(X) \%*\% Toep
solve(Toep, X)
determinant(Toep) # log-determinant
}
