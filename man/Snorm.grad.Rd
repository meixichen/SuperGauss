% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Snorm-grad.R
\name{Snorm.grad}
\alias{Snorm.grad}
\title{Gradient of a Stationary Gaussian Log-Likelihood}
\usage{
Snorm.grad(X, mu, acf, dmu, dacf)
}
\arguments{
\item{X}{\eqn{N \times d} matrix, each column i.i.d. follows multivariate Gaussian distribution with mean \code{mu} and Toeplitz variance given by \code{acf}.}

\item{mu}{length \eqn{N} vector or matrix.}

\item{acf}{length \eqn{N} vector or matrix, first column of variance matrix, or a Toeplitz class initialized by acf}

\item{dmu}{size \eqn{N \times p} matrix, where \eqn{p} is the number of parameters, each column is the partial derivative of \code{mu}.}

\item{dacf}{size \eqn{N \times p} matrix, each column is the partial derivative of \code{acf}.}
}
\value{
The gradient of the log-likelihood.
}
\description{
Efficient evaluation of log-likelihood gradient for stationary Gaussian data.
}
\note{
package "SuperGauss" is required

the order of partial derivative in \code{dmu} and \code{dacf} must be identical. Assuming that \eqn{\beta} is
the second parameter, then second column of \code{dmu} should be \eqn{\frac{\partial \mu}{\partial \beta}}, second column of 
\code{dacf} should be \eqn{\frac{\partial acf}{\partial \beta}}
}
\examples{
N <- 300
d <- 4
X <- matrix(rnorm(N*d), N, d)
theta <- 0.1
lambda <- 2

mu <- theta^2 * rep(1, N)
acf <- exp(-lambda * (1:N - 1))
acf <- Toeplitz(acf = acf)
dmu <- matrix(0, N, 2)
dmu[, 1] <- 2 * theta * rep(1, N)
dacf <- matrix(0, N, 2)
dacf[, 2] <- -lambda * exp(-lambda * (1:N - 1))

Snorm.grad(X, mu, acf, dmu, dacf)
}
