% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Snorm-hess.R
\name{Snorm.Hess}
\alias{Snorm.Hess}
\title{Hessian of a Stationary Gaussian Log-Likelihood}
\usage{
Snorm.Hess(X, mean, acf, dmean, dacf, d2mean, d2acf)
}
\arguments{
\item{X}{\eqn{n \times d} matrix, d i.i.d. vector follows N(mean, Variance).}

\item{mean}{\eqn{n} vector or matrix.}

\item{acf}{\eqn{n} vector or matrix, first column of variance matrix, or a Toeplitz class initialized by acf}

\item{dmean}{\eqn{n \times p} matrix, where p is the number of parameters, each column is the partial derivative of mean}

\item{dacf}{\eqn{n \times p} matrix, each column is the partial deruvative of acf}

\item{d2mean}{\eqn{n \times p \times p} array}

\item{d2acf}{\eqn{n \times p \times p} array}
}
\value{
The Hessian matrix of the log-likelihood.
}
\description{
Efficient calculation of the Hessian matrix of the log-likelihood of stationary Gaussian data.
}
\note{
package "SuperGauss" is required

if d2mean and d2acf is \eqn{n \times 1} matrix or array, it only works when p = 1
}
\examples{
N <- 30
p <- 4
X <- as.matrix(rnorm(N))
mean <- as.matrix(rnorm(N))
acf <- fbm.acf(alpha = 0.8, dT = 1/60, N = N)
acf <- Toeplitz(acf)
dmean <- matrix(rnorm(N*p), N, p)
dacf <- matrix(rnorm(N*p), N, p)
d2mean <- array(rnorm(N*p*p), dim = c(N, p, p))
d2acf <- array(rnorm(N*p*p), dim = c(N, p, p))
Snorm.Hess(X, mean, acf, dmean, dacf, d2mean, d2acf)
}
